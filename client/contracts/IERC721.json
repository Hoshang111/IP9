{
  "contractName": "IERC721",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x20746b79ce9be1524eac3259b84e8c3d87ede2e3970c49c264f0911a5ab8c7f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ea8e549a5ed893995496f8f3133021d5aa29e79cce33ad3144786ecf865abd7\",\"dweb:/ipfs/QmbmEeyNqupmYYjoZd7xHKhBUFgEzqQ4mCJ7b3ogZ5AoHX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
<<<<<<< HEAD
  "source": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n",
  "sourcePath": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol",
=======
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n",
  "sourcePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
  "ast": {
    "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
    "exportedSymbols": {
      "IERC165": [
        1824
      ],
      "IERC721": [
        1021
      ]
    },
    "id": 1022,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 907,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
<<<<<<< HEAD
        "src": "111:23:2"
=======
        "src": "108:23:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "../../utils/introspection/IERC165.sol",
        "id": 908,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1022,
        "sourceUnit": 1825,
<<<<<<< HEAD
        "src": "138:47:2",
=======
        "src": "133:47:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 910,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1824,
<<<<<<< HEAD
              "src": "281:7:2"
            },
            "id": 911,
            "nodeType": "InheritanceSpecifier",
            "src": "281:7:2"
=======
              "src": "271:7:2"
            },
            "id": 911,
            "nodeType": "InheritanceSpecifier",
            "src": "271:7:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
          }
        ],
        "canonicalName": "IERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 909,
          "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
          "src": "189:69:2",
=======
          "src": "182:67:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
          "text": " @dev Required interface of an ERC721 compliant contract."
        },
        "fullyImplemented": false,
        "id": 1021,
        "linearizedBaseContracts": [
          1021,
          1824
        ],
        "name": "IERC721",
<<<<<<< HEAD
        "nameLocation": "270:7:2",
=======
        "nameLocation": "260:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 912,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "296:90:2",
=======
              "src": "285:88:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 920,
            "name": "Transfer",
<<<<<<< HEAD
            "nameLocation": "398:8:2",
=======
            "nameLocation": "384:8:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
<<<<<<< HEAD
                  "nameLocation": "423:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 920,
                  "src": "407:20:2",
=======
                  "nameLocation": "409:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 920,
                  "src": "393:20:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "407:7:2",
=======
                    "src": "393:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
<<<<<<< HEAD
                  "nameLocation": "445:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 920,
                  "src": "429:18:2",
=======
                  "nameLocation": "431:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 920,
                  "src": "415:18:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "429:7:2",
=======
                    "src": "415:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 918,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
<<<<<<< HEAD
                  "nameLocation": "465:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 920,
                  "src": "449:23:2",
=======
                  "nameLocation": "451:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 920,
                  "src": "435:23:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "449:7:2",
=======
                    "src": "435:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "406:67:2"
            },
            "src": "392:82:2"
=======
              "src": "392:67:2"
            },
            "src": "378:82:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 921,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "482:96:2",
=======
              "src": "466:94:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 929,
            "name": "Approval",
<<<<<<< HEAD
            "nameLocation": "590:8:2",
=======
            "nameLocation": "571:8:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 923,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
<<<<<<< HEAD
                  "nameLocation": "615:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "599:21:2",
=======
                  "nameLocation": "596:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "580:21:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "599:7:2",
=======
                    "src": "580:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 925,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
<<<<<<< HEAD
                  "nameLocation": "638:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "622:24:2",
=======
                  "nameLocation": "619:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "603:24:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "622:7:2",
=======
                    "src": "603:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 927,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
<<<<<<< HEAD
                  "nameLocation": "664:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "648:23:2",
=======
                  "nameLocation": "645:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "629:23:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "648:7:2",
=======
                    "src": "629:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "598:74:2"
            },
            "src": "584:89:2"
=======
              "src": "579:74:2"
            },
            "src": "565:89:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 930,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "681:119:2",
=======
              "src": "660:117:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
            "id": 938,
            "name": "ApprovalForAll",
<<<<<<< HEAD
            "nameLocation": "812:14:2",
=======
            "nameLocation": "788:14:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
<<<<<<< HEAD
                  "nameLocation": "843:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 938,
                  "src": "827:21:2",
=======
                  "nameLocation": "819:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 938,
                  "src": "803:21:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "827:7:2",
=======
                    "src": "803:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 934,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
<<<<<<< HEAD
                  "nameLocation": "866:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 938,
                  "src": "850:24:2",
=======
                  "nameLocation": "842:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 938,
                  "src": "826:24:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "850:7:2",
=======
                    "src": "826:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 936,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
<<<<<<< HEAD
                  "nameLocation": "881:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 938,
                  "src": "876:13:2",
=======
                  "nameLocation": "857:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 938,
                  "src": "852:13:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "876:4:2",
=======
                    "src": "852:4:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "826:64:2"
            },
            "src": "806:85:2"
=======
              "src": "802:64:2"
            },
            "src": "782:85:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
          },
          {
            "documentation": {
              "id": 939,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "899:78:2",
=======
              "src": "873:76:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 946,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
<<<<<<< HEAD
            "nameLocation": "992:9:2",
=======
            "nameLocation": "963:9:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "mutability": "mutable",
                  "name": "owner",
<<<<<<< HEAD
                  "nameLocation": "1010:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "1002:13:2",
=======
                  "nameLocation": "981:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "973:13:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1002:7:2",
=======
                    "src": "973:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1001:15:2"
=======
              "src": "972:15:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            },
            "returnParameters": {
              "id": 945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 944,
                  "mutability": "mutable",
                  "name": "balance",
<<<<<<< HEAD
                  "nameLocation": "1048:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "1040:15:2",
=======
                  "nameLocation": "1019:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "1011:15:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1040:7:2",
=======
                    "src": "1011:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1039:17:2"
            },
            "scope": 1021,
            "src": "983:74:2",
=======
              "src": "1010:17:2"
            },
            "scope": 1021,
            "src": "954:74:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 947,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "1065:137:2",
=======
              "src": "1034:131:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 954,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
<<<<<<< HEAD
            "nameLocation": "1217:7:2",
=======
            "nameLocation": "1179:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "tokenId",
<<<<<<< HEAD
                  "nameLocation": "1233:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "1225:15:2",
=======
                  "nameLocation": "1195:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "1187:15:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1225:7:2",
=======
                    "src": "1187:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1224:17:2"
=======
              "src": "1186:17:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 952,
                  "mutability": "mutable",
                  "name": "owner",
<<<<<<< HEAD
                  "nameLocation": "1273:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "1265:13:2",
=======
                  "nameLocation": "1235:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "1227:13:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1265:7:2",
=======
                    "src": "1227:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1264:15:2"
            },
            "scope": 1021,
            "src": "1208:72:2",
=======
              "src": "1226:15:2"
            },
            "scope": 1021,
            "src": "1170:72:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 955,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "1288:568:2",
=======
              "src": "1248:556:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 966,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
<<<<<<< HEAD
            "nameLocation": "1871:16:2",
=======
            "nameLocation": "1818:16:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "from",
<<<<<<< HEAD
                  "nameLocation": "1906:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "1898:12:2",
=======
                  "nameLocation": "1852:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "1844:12:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1898:7:2",
=======
                    "src": "1844:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "to",
<<<<<<< HEAD
                  "nameLocation": "1929:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "1921:10:2",
=======
                  "nameLocation": "1874:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "1866:10:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1921:7:2",
=======
                    "src": "1866:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "tokenId",
<<<<<<< HEAD
                  "nameLocation": "1950:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "1942:15:2",
=======
                  "nameLocation": "1894:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "1886:15:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1942:7:2",
=======
                    "src": "1886:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "data",
<<<<<<< HEAD
                  "nameLocation": "1983:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "1968:19:2",
=======
                  "nameLocation": "1926:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "1911:19:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1968:5:2",
=======
                    "src": "1911:5:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1887:107:2"
=======
              "src": "1834:102:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            },
            "returnParameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2003:0:2"
            },
            "scope": 1021,
            "src": "1862:142:2",
=======
              "src": "1945:0:2"
            },
            "scope": 1021,
            "src": "1809:137:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 967,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "2012:703:2",
=======
              "src": "1952:690:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 976,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
<<<<<<< HEAD
            "nameLocation": "2730:16:2",
=======
            "nameLocation": "2656:16:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "from",
<<<<<<< HEAD
                  "nameLocation": "2765:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "2757:12:2",
=======
                  "nameLocation": "2690:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "2682:12:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2757:7:2",
=======
                    "src": "2682:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 971,
                  "mutability": "mutable",
                  "name": "to",
<<<<<<< HEAD
                  "nameLocation": "2788:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "2780:10:2",
=======
                  "nameLocation": "2712:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "2704:10:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2780:7:2",
=======
                    "src": "2704:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "mutability": "mutable",
                  "name": "tokenId",
<<<<<<< HEAD
                  "nameLocation": "2809:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "2801:15:2",
=======
                  "nameLocation": "2732:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "2724:15:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2801:7:2",
=======
                    "src": "2724:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2746:77:2"
=======
              "src": "2672:73:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            },
            "returnParameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2832:0:2"
            },
            "scope": 1021,
            "src": "2721:112:2",
=======
              "src": "2754:0:2"
            },
            "scope": 1021,
            "src": "2647:108:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 977,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "2841:517:2",
=======
              "src": "2761:504:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 986,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
<<<<<<< HEAD
            "nameLocation": "3373:12:2",
=======
            "nameLocation": "3279:12:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 979,
                  "mutability": "mutable",
                  "name": "from",
<<<<<<< HEAD
                  "nameLocation": "3404:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "3396:12:2",
=======
                  "nameLocation": "3309:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "3301:12:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3396:7:2",
=======
                    "src": "3301:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 981,
                  "mutability": "mutable",
                  "name": "to",
<<<<<<< HEAD
                  "nameLocation": "3427:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "3419:10:2",
=======
                  "nameLocation": "3331:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "3323:10:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3419:7:2",
=======
                    "src": "3323:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "tokenId",
<<<<<<< HEAD
                  "nameLocation": "3448:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "3440:15:2",
=======
                  "nameLocation": "3351:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "3343:15:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3440:7:2",
=======
                    "src": "3343:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3385:77:2"
=======
              "src": "3291:73:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            },
            "returnParameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "3471:0:2"
            },
            "scope": 1021,
            "src": "3364:108:2",
=======
              "src": "3373:0:2"
            },
            "scope": 1021,
            "src": "3270:104:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 987,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "3480:464:2",
=======
              "src": "3380:452:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 994,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
<<<<<<< HEAD
            "nameLocation": "3959:7:2",
=======
            "nameLocation": "3846:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 989,
                  "mutability": "mutable",
                  "name": "to",
<<<<<<< HEAD
                  "nameLocation": "3975:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "3967:10:2",
=======
                  "nameLocation": "3862:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "3854:10:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3967:7:2",
=======
                    "src": "3854:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 991,
                  "mutability": "mutable",
                  "name": "tokenId",
<<<<<<< HEAD
                  "nameLocation": "3987:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "3979:15:2",
=======
                  "nameLocation": "3874:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "3866:15:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3979:7:2",
=======
                    "src": "3866:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3966:29:2"
=======
              "src": "3853:29:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            },
            "returnParameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "4004:0:2"
            },
            "scope": 1021,
            "src": "3950:55:2",
=======
              "src": "3891:0:2"
            },
            "scope": 1021,
            "src": "3837:55:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 995,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "4013:318:2",
=======
              "src": "3898:309:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 1002,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
<<<<<<< HEAD
            "nameLocation": "4346:17:2",
=======
            "nameLocation": "4221:17:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "operator",
<<<<<<< HEAD
                  "nameLocation": "4372:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "4364:16:2",
=======
                  "nameLocation": "4247:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "4239:16:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4364:7:2",
=======
                    "src": "4239:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "_approved",
<<<<<<< HEAD
                  "nameLocation": "4387:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "4382:14:2",
=======
                  "nameLocation": "4262:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "4257:14:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4382:4:2",
=======
                    "src": "4257:4:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4363:34:2"
=======
              "src": "4238:34:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            },
            "returnParameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "4406:0:2"
            },
            "scope": 1021,
            "src": "4337:70:2",
=======
              "src": "4281:0:2"
            },
            "scope": 1021,
            "src": "4212:70:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1003,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "4415:145:2",
=======
              "src": "4288:139:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 1010,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
<<<<<<< HEAD
            "nameLocation": "4575:11:2",
=======
            "nameLocation": "4441:11:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "tokenId",
<<<<<<< HEAD
                  "nameLocation": "4595:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "4587:15:2",
=======
                  "nameLocation": "4461:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "4453:15:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4587:7:2",
=======
                    "src": "4453:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4586:17:2"
=======
              "src": "4452:17:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "operator",
<<<<<<< HEAD
                  "nameLocation": "4635:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "4627:16:2",
=======
                  "nameLocation": "4501:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "4493:16:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4627:7:2",
=======
                    "src": "4493:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4626:18:2"
            },
            "scope": 1021,
            "src": "4566:79:2",
=======
              "src": "4492:18:2"
            },
            "scope": 1021,
            "src": "4432:79:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1011,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "4653:142:2",
=======
              "src": "4517:138:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 1020,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
<<<<<<< HEAD
            "nameLocation": "4810:16:2",
=======
            "nameLocation": "4669:16:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "owner",
<<<<<<< HEAD
                  "nameLocation": "4835:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "4827:13:2",
=======
                  "nameLocation": "4694:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "4686:13:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4827:7:2",
=======
                    "src": "4686:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1015,
                  "mutability": "mutable",
                  "name": "operator",
<<<<<<< HEAD
                  "nameLocation": "4850:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "4842:16:2",
=======
                  "nameLocation": "4709:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "4701:16:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4842:7:2",
=======
                    "src": "4701:7:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4826:33:2"
=======
              "src": "4685:33:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            },
            "returnParameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1018,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
<<<<<<< HEAD
                  "src": "4883:4:2",
=======
                  "src": "4742:4:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1017,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4883:4:2",
=======
                    "src": "4742:4:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4882:6:2"
            },
            "scope": 1021,
            "src": "4801:88:2",
=======
              "src": "4741:6:2"
            },
            "scope": 1021,
            "src": "4660:88:2",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1022,
<<<<<<< HEAD
        "src": "260:4632:2",
        "usedErrors": []
      }
    ],
    "src": "111:4783:2"
=======
        "src": "250:4500:2",
        "usedErrors": []
      }
    ],
    "src": "108:4643:2"
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
<<<<<<< HEAD
  "updatedAt": "2022-07-28T02:49:09.337Z",
=======
  "updatedAt": "2022-07-28T02:45:25.516Z",
>>>>>>> 8cb54bfd3acc1898b1e3710c1d4640c6739e0c76
  "devdoc": {
    "details": "Required interface of an ERC721 compliant contract.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}